1.Что такое class и в чем отличие от object?

Класс в Java - это шаблон для создания объекта, а объект - это экземпляр класса.
Отличие между ними заключается в том что обЪект это какие то персонажи или определенные вещи,
А классы определяет структуру и поведение объекта.

2.Для чего нужны packages и что такое import?

Пакеты - это наборы предопределенного кода, функций и ресурсов, которые позволяют разработчикам переиспользовать код для решения определенных задач. Импорт - механизм, позволяющий включить функциональность из определенных пакетов в текущую программу.


3.Как следует называть имена классов и методов? Где можно найти документацию?

Имена классов должны быть существительными и использовать UpperCamelCase, без использования пробелов или подчеркиваний. Например: BankAccount.

Имена методов должны быть глагольными фразами и использовать camelCase (или lowerCamelCase). Начинать первое слово с маленькой буквы, а каждое следующее слово с заглавной без пробелов или подчеркиваний. Например:  sendMessage

4.Есть ли ограничение по количеству конструкторов в классе?

В Java нет ограничений на количество конструкторов в классе. Можно определить сколько угодно конструкторов в одном классе, каждый с разным набором параметров или аргументов. 

5.Что будет, если не указать ни одного конструктора в классе?

Мне кажется что это не возможно, тогда java компилятор java автоматически добавит дефолтный конструктор.


6.Для чего нужен this?

В Java, ключевое слово this используется для обращения к текущему объекту внутри его методов или конструкторов. Оно позволяет различать поля класса и параметры методов/конструкторов с одинаковыми именами, а также передавать ссылку на текущий объект.

7.Что такое инкапсуляция и какие способы его достижения существуют в java?

Инкапсуляция - это один из четырех принципов объектно-ориентированного программирования (ООП), который позволяет скрыть детали реализации объекта от внешнего мира и предоставить доступ только к определенным частям объекта, которые должны быть доступны извне. Таким образом, инкапсуляция позволяет достичь защиты данных и контроля над доступом к объекту.
Инкапсуляция достигается с помощью использования модификаторов доступа и геттеров и сеттеров:
Также это могут быть модификаторы public private protected и отсутствие модификатора (default)

Эти модификаторы определяют, кто имеет доступ к членам класса (полям и методам).

8.Какие модификаторы доступа существуют? коротко опишите каждый из них

По-моему получился ответ в прошлом вопросе 

9.Для чего нужны геттеры и сеттеры?

Геттеры используются для получения значений полей класса извне, а сеттеры - для установки значений полей. Использование геттеров и сеттеров позволяет контролировать доступ к полям класса, что обеспечивает инкапсуляцию.
